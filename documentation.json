{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-e02b45992615117245f874b874b96ea74189e3269402e9806a2921ec5491e6dbd0400a8a2d597850338a7c0fe54ea6f065ef7c1644ea2ed8f9b57cf7c9308c64",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'ThanOS'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ThanOS';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<contextmenu></contextmenu>"
        },
        {
            "name": "ContextmenuComponent",
            "id": "component-ContextmenuComponent-768c758ce491fe5329a1089747f7a2bea96c8704576fe79a9e49c4e7681154c0cd49837e07adc28d37e0c6db6906895abe6aad16e98d51300a1a2fb980a847a8",
            "file": "src/app/components/contextmenu/contextmenu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "contextmenu",
            "styleUrls": [
                "./contextmenu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./contextmenu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, HostListener, OnInit, Output, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'contextmenu',\n  templateUrl: './contextmenu.component.html',\n  styleUrls: ['./contextmenu.component.scss']\n})\nexport class ContextmenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".contextmenu {\r\n    width: fit-content;\r\n    width: 250px; //333px\r\n    //height: 281px; //375px\r\n    background-color: rgba(255, 255, 255, 0.50);\r\n    background-color: rgb(192, 192, 192);\r\n    border-radius: 10px;\r\n    padding: 5px;\r\n    overflow: hidden;\r\n\r\n    .contextmenu-item {\r\n        display: flex;\r\n        justify-content: start;\r\n        align-items: center;\r\n        padding: 5px;\r\n        border-radius: 10px;\r\n        background-color: transparent;\r\n\r\n        &:hover {\r\n            background-color: rgba(255, 255, 255, 0.19);\r\n        }\r\n\r\n        .contextmenu-icon {\r\n            margin-right: 10px;\r\n\r\n            .fa {\r\n                color: white;\r\n            }\r\n        }\r\n\r\n        .contextmenu-text {\r\n            font-size: medium;\r\n            font-weight: 400;\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./contextmenu.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"contextmenu\">\n    <div class=\"contextmenu-item\">\n        <span class=\"contextmenu-icon\"><i class=\"fa fa-rotate-right\"></i></span>\n        <span class=\"contextmenu-text\">View</span>\n    </div>\n    <div class=\"contextmenu-item\">\n        <span class=\"contextmenu-icon\"><i class=\"fa fa-rotate-right\"></i></span>\n        <span class=\"contextmenu-text\">Sort By</span>\n    </div>\n    <div class=\"contextmenu-item\">\n        <span class=\"contextmenu-icon\"><img src=\"src\\assets\\icons\\rotate-right.svg\" alt=\"\"></span>\n        <span class=\"contextmenu-text\">Refresh</span>\n    </div>\n    <div class=\"contextmenu-item\">\n        <span class=\"contextmenu-icon\"><i class=\"fa fa-rotate-right\"></i></span>\n        <span class=\"contextmenu-text\">New</span>\n    </div>\n    <div class=\"contextmenu-item\">\n        <span class=\"contextmenu-icon\"><i class=\"fa fa-rotate-right\"></i></span>\n        <span class=\"contextmenu-text\">Display Settings</span>\n    </div>\n    <div class=\"contextmenu-item\">\n        <span class=\"contextmenu-icon\"><i class=\"fa fa-rotate-right\"></i></span>\n        <span class=\"contextmenu-text\">Personalise</span>\n    </div>\n    <div class=\"contextmenu-item\">\n        <span class=\"contextmenu-icon\"><i class=\"fa fa-rotate-right\"></i></span>\n        <span class=\"contextmenu-text\">Open in Terminal</span>\n    </div>\n    <div class=\"contextmenu-item\">\n        <span class=\"contextmenu-icon\"><i class=\"fa fa-rotate-right\"></i></span>\n        <span class=\"contextmenu-text\">Show more Options</span>\n    </div>\n</div>"
        },
        {
            "name": "PopupComponent",
            "id": "component-PopupComponent-df976ff039ff8f87ced0cddac2dfcd7ff4f2f454eb0ed21c9d8765068515c4a0c8847566a79d36feec593784198116046e8f7aeb9ade1e28852c68582e4185f4",
            "file": "src/app/components/popup/popup.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-popup",
            "styleUrls": [
                "./popup.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./popup.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "clickHandler",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, HostBinding, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-popup',\n  templateUrl: './popup.component.html',\n  styleUrls: ['./popup.component.scss']\n})\nexport class PopupComponent implements OnInit {\n  @Output() clickHandler: EventEmitter<any> = new EventEmitter();\n  @Input()\n  @HostBinding('attr.disabled')\n  public disabled: boolean | undefined;\n    /* \n    @Input()\n    public icon: string;\n    private _type: ButtonType = 'button';\n    public get type(): ButtonType {\n      return this._type;\n    }\n    @Input() set type(value: ButtonType) {\n      this._type = value;\n    }\n    @HostBinding('attr.styling')\n    private _styling: UI_Style = 'raised';\n    public get styling(): UI_Style {\n      return this._styling;\n    }\n    @Input() set styling(value: UI_Style) {\n      this._styling = value;\n    }\n    @HostBinding('attr.color')\n    private _color: UI_Color = 'default';\n    public get color(): UI_Color {\n      return this._color;\n    }\n    @Input() set color(value: UI_Color) {\n      this._color = value;\n    }\n    @HostBinding('attr.size')\n    private _size: UI_Size = 'small';\n    public get size(): UI_Size {\n      return this._size;\n    }\n    @Input() set size(value: UI_Size) {\n      this._size = value;\n    } */\n    constructor() { }\n  ngOnInit(): void {\n    throw new Error('Method not implemented.');\n  }\n  onClick(event: Event) {\n    if (!this.disabled) this.clickHandler.emit(event);\n  }\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/* :host {\r\n    display: block;\r\n    text-align: center;\r\n\r\n    button {\r\n        width: 100%;\r\n    }\r\n\r\n    .button-icon {\r\n        font-family: 'Material Icons Outlined';\r\n        line-height: 1rem;\r\n    }\r\n}\r\n\r\n:host[disabled='true'] {\r\n    button {\r\n        cursor: not-allowed;\r\n        @apply text-gray-300 #{!important} bg-gray-200 #{!important};\r\n\r\n        &:hover {\r\n            @apply bg-gray-200 #{!important};\r\n        }\r\n\r\n        &.btn-stroked {\r\n            @apply border-gray-300;\r\n        }\r\n    }\r\n}\r\n\r\n//Start of Styling\r\n:host[styling='raised'] {\r\n    button {\r\n        @apply shadow-lg;\r\n    }\r\n}\r\n\r\n:host[styling='flat'] {\r\n    button {\r\n        @apply shadow-lg;\r\n        @apply rounded-none #{!important};\r\n    }\r\n}\r\n\r\n:host[styling='stroked'] {\r\n    button {\r\n        @apply border-2;\r\n    }\r\n}\r\n\r\n:host[styling='stroked'][color='primary'] {\r\n    button {\r\n        @apply border-primary-dark;\r\n    }\r\n}\r\n\r\n:host[styling='stroked'][color='secondary'] {\r\n    button {\r\n        @apply border-secondary-dark;\r\n    }\r\n}\r\n\r\n:host[styling='stroked'][color='success'] {\r\n    button {\r\n        @apply border-green-800;\r\n    }\r\n}\r\n\r\n:host[styling='stroked'],\r\n:host[color='danger'] {\r\n    button {\r\n        @apply border-red-800;\r\n    }\r\n}\r\n\r\n:host[styling='stroked'][color='warning'] {\r\n    button {\r\n        @apply border-yellow-800;\r\n    }\r\n}\r\n\r\n:host[styling='stroked'][color='default'] {\r\n    button {\r\n        @apply border-gray-200;\r\n    }\r\n}\r\n\r\n//End of Styling\r\n//Start of Color\r\n:host[color='primary'] {\r\n    button {\r\n        @apply bg-primary text-white;\r\n\r\n        &:hover {\r\n            @apply bg-primary-dark;\r\n        }\r\n    }\r\n}\r\n\r\n:host[color='secondary'] {\r\n    button {\r\n        @apply bg-secondary text-white;\r\n\r\n        &:hover {\r\n            @apply bg-secondary-dark;\r\n        }\r\n    }\r\n}\r\n\r\n:host[color='success'] {\r\n    button {\r\n        @apply bg-green-700 text-white;\r\n\r\n        &:hover {\r\n            @apply bg-green-800;\r\n        }\r\n    }\r\n}\r\n\r\n:host[color='danger'] {\r\n    button {\r\n        @apply bg-red-700 text-white;\r\n\r\n        &:hover {\r\n            @apply bg-red-800;\r\n        }\r\n    }\r\n}\r\n\r\n:host[color='warning'] {\r\n    button {\r\n        @apply bg-yellow-700 text-white;\r\n\r\n        &:hover {\r\n            @apply bg-yellow-800;\r\n        }\r\n    }\r\n}\r\n\r\n:host[color='default'] {\r\n    button {\r\n        @apply bg-gray-100;\r\n\r\n        &:hover {\r\n            @apply bg-gray-200;\r\n        }\r\n    }\r\n}\r\n\r\n//End of Color\r\n//Start of Size\r\n:host[size='extra-small'] {\r\n    button {\r\n        @apply py-1 px-2 rounded-md text-xs;\r\n    }\r\n}\r\n\r\n:host[size='small'] {\r\n    button {\r\n        @apply py-2 px-4 rounded-md;\r\n    }\r\n}\r\n\r\n:host[size='medium'] {\r\n    button {\r\n        @apply py-4 px-8 rounded-md;\r\n    }\r\n}\r\n\r\n:host[size='large'] {\r\n    button {\r\n        @apply py-6 px-10 rounded-lg;\r\n    }\r\n}\r\n\r\n:host[size='extra-large'] {\r\n    button {\r\n        @apply py-8 px-12 rounded-xl;\r\n    }\r\n} */",
                    "styleUrl": "./popup.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button> Button </button>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-05876b5e07ecb32b76bd712551dbc321d0bdc0b6b7dee909e85728c3fdabc2052dd2043cf9c9117844cf0f8b8bc23dfb6686096f420bc67a093f9d93c24df750",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PopupComponent } from './components/popup/popup.component';\nimport { ContextmenuComponent } from './components/contextmenu/contextmenu.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PopupComponent,\n    ContextmenuComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "ContextmenuComponent"
                        },
                        {
                            "name": "PopupComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-78922b3ae99d2c5249b333980bd5afde1b120b2cc6fedfd41b8b2cc90f279797cb4b22e183bf7e1d1dfab8c6100e77e7812c110234d81f866f544f28a3e18b15",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Colors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/popup/popup.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `\r\n    <app-popup color='primary'>Primary</app-popup>\r\n    <app-popup color='secondary'>Secondary</app-popup>\r\n    <app-popup color='success'>Success</app-popup>\r\n    <app-popup color='danger'>Danger</app-popup>\r\n    <app-popup color='warning'>Warning</app-popup>\r\n    <app-popup color='default'>Default</app-popup>`,\r\n})"
            },
            {
                "name": "Configurable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/popup/popup.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/popup/popup.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `<app-popup [disabled]='true'>Disabled</app-popup>`,\r\n})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/contextmenu/contextmenu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Sizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/popup/popup.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `\r\n    <app-popup size=\"extra-small\">Extra Small</app-popup>\r\n    <app-popup size=\"small\">Small</app-popup>\r\n    <app-popup size=\"medium\">Medium</app-popup>\r\n    <app-popup size=\"large\">Large</app-popup>\r\n    <app-popup size=\"extra-large\">Extra Large</app-popup>`,\r\n})"
            },
            {
                "name": "Styles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/popup/popup.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `\r\n    <app-popup size='small' styling='raised'>Raised</app-popup>\r\n    <app-popup styling='flat'>Flat</app-popup>\r\n    <app-popup styling='stroked'>Stroked</app-popup>`,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/popup/popup.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<PopupComponent>",
                "defaultValue": "(args: PopupComponent) => ({\r\n    props: args,\r\n    template: `<app-popup [styling]='styling' [color]='color' [size]='size' [type]='type' [disabled]='disabled'>Example</app-popup>`,\r\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/components/popup/popup.stories.ts": [
                {
                    "name": "Colors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/popup/popup.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `\r\n    <app-popup color='primary'>Primary</app-popup>\r\n    <app-popup color='secondary'>Secondary</app-popup>\r\n    <app-popup color='success'>Success</app-popup>\r\n    <app-popup color='danger'>Danger</app-popup>\r\n    <app-popup color='warning'>Warning</app-popup>\r\n    <app-popup color='default'>Default</app-popup>`,\r\n})"
                },
                {
                    "name": "Configurable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/popup/popup.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/popup/popup.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `<app-popup [disabled]='true'>Disabled</app-popup>`,\r\n})"
                },
                {
                    "name": "Sizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/popup/popup.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `\r\n    <app-popup size=\"extra-small\">Extra Small</app-popup>\r\n    <app-popup size=\"small\">Small</app-popup>\r\n    <app-popup size=\"medium\">Medium</app-popup>\r\n    <app-popup size=\"large\">Large</app-popup>\r\n    <app-popup size=\"extra-large\">Extra Large</app-popup>`,\r\n})"
                },
                {
                    "name": "Styles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/popup/popup.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `\r\n    <app-popup size='small' styling='raised'>Raised</app-popup>\r\n    <app-popup styling='flat'>Flat</app-popup>\r\n    <app-popup styling='stroked'>Stroked</app-popup>`,\r\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/popup/popup.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<PopupComponent>",
                    "defaultValue": "(args: PopupComponent) => ({\r\n    props: args,\r\n    template: `<app-popup [styling]='styling' [color]='color' [size]='size' [type]='type' [disabled]='disabled'>Example</app-popup>`,\r\n})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/app/components/contextmenu/contextmenu.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/contextmenu/contextmenu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/contextmenu/contextmenu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContextmenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/contextmenu/contextmenu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/popup/popup.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PopupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/popup/popup.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Colors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/popup/popup.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Configurable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/popup/popup.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/popup/popup.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/popup/popup.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Styles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/popup/popup.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}